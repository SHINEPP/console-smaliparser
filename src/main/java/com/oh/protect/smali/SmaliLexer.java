// Generated from /Users/zhouzhenliang/source/shine/console-smaliparser/src/main/antlr4/SmaliLexer.g4 by ANTLR 4.13.1
package com.oh.protect.smali;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class SmaliLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT_LINE=1, CLASS_DEF=2, SUPER_DEF=3, SOURCE_DEF=4, IMPLEMENTS_DEF=5, 
		ANNOTATION_BLOCK=6, FIELD_BLOCK_START=7, METHOD_BLOCK_START=8, WS=9, FIELD_BLOCK_END=10, 
		FIELD_BLOCK_LINE=11, METHOD_BLOCK_END=12, METHOD_BLOCK_LINE=13;
	public static final int
		FIELD_MODE=1, METHOD_MODE=2;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "FIELD_MODE", "METHOD_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"COMMENT_LINE", "CLASS", "SUPER", "SOURCE", "IMPLEMENTS", "ANNOTATION", 
			"ANNOTATION_END", "FIELD", "FIELD_END", "METHOD", "METHOD_END", "CR", 
			"CLASS_DEF", "SUPER_DEF", "SOURCE_DEF", "IMPLEMENTS_DEF", "ANNOTATION_BLOCK", 
			"FIELD_BLOCK_START", "METHOD_BLOCK_START", "WS", "FIELD_BLOCK_END", "FIELD_BLOCK_LINE", 
			"METHOD_BLOCK_END", "METHOD_BLOCK_LINE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "COMMENT_LINE", "CLASS_DEF", "SUPER_DEF", "SOURCE_DEF", "IMPLEMENTS_DEF", 
			"ANNOTATION_BLOCK", "FIELD_BLOCK_START", "METHOD_BLOCK_START", "WS", 
			"FIELD_BLOCK_END", "FIELD_BLOCK_LINE", "METHOD_BLOCK_END", "METHOD_BLOCK_LINE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SmaliLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SmaliLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 21:
			return FIELD_BLOCK_LINE_sempred((RuleContext)_localctx, predIndex);
		case 23:
			return METHOD_BLOCK_LINE_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean FIELD_BLOCK_LINE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return  !getText().startsWith(".end field") ;
		}
		return true;
	}
	private boolean METHOD_BLOCK_LINE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1:
			return  !getText().startsWith(".end method") ;
		}
		return true;
	}

	public static final String _serializedATN =
		"\u0004\u0000\r\u00ef\u0006\uffff\uffff\u0006\uffff\uffff\u0006\uffff\uffff"+
		"\u0002\u0000\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002"+
		"\u0002\u0003\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005"+
		"\u0002\u0006\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b\u0002"+
		"\t\u0007\t\u0002\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007\f\u0002"+
		"\r\u0007\r\u0002\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002\u0010"+
		"\u0007\u0010\u0002\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002\u0013"+
		"\u0007\u0013\u0002\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002\u0016"+
		"\u0007\u0016\u0002\u0017\u0007\u0017\u0001\u0000\u0001\u0000\u0005\u0000"+
		"6\b\u0000\n\u0000\f\u00009\t\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0005\f\u00a7\b\f\n"+
		"\f\f\f\u00aa\t\f\u0001\r\u0001\r\u0005\r\u00ae\b\r\n\r\f\r\u00b1\t\r\u0001"+
		"\u000e\u0001\u000e\u0005\u000e\u00b5\b\u000e\n\u000e\f\u000e\u00b8\t\u000e"+
		"\u0001\u000f\u0001\u000f\u0005\u000f\u00bc\b\u000f\n\u000f\f\u000f\u00bf"+
		"\t\u000f\u0001\u0010\u0001\u0010\u0005\u0010\u00c3\b\u0010\n\u0010\f\u0010"+
		"\u00c6\t\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0005\u0015\u00db\b\u0015\n\u0015\f\u0015\u00de"+
		"\t\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0005\u0017\u00e8\b\u0017\n\u0017\f\u0017"+
		"\u00eb\t\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u00c4\u0000\u0018"+
		"\u0003\u0001\u0005\u0000\u0007\u0000\t\u0000\u000b\u0000\r\u0000\u000f"+
		"\u0000\u0011\u0000\u0013\u0000\u0015\u0000\u0017\u0000\u0019\u0000\u001b"+
		"\u0002\u001d\u0003\u001f\u0004!\u0005#\u0006%\u0007\'\b)\t+\n-\u000b/"+
		"\f1\r\u0003\u0000\u0001\u0002\u0002\u0002\u0000\n\n\r\r\u0003\u0000\t"+
		"\n\r\r  \u00e9\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000"+
		")\u0001\u0000\u0000\u0000\u0001+\u0001\u0000\u0000\u0000\u0001-\u0001"+
		"\u0000\u0000\u0000\u0002/\u0001\u0000\u0000\u0000\u00021\u0001\u0000\u0000"+
		"\u0000\u00033\u0001\u0000\u0000\u0000\u0005>\u0001\u0000\u0000\u0000\u0007"+
		"E\u0001\u0000\u0000\u0000\tL\u0001\u0000\u0000\u0000\u000bT\u0001\u0000"+
		"\u0000\u0000\r`\u0001\u0000\u0000\u0000\u000fl\u0001\u0000\u0000\u0000"+
		"\u0011|\u0001\u0000\u0000\u0000\u0013\u0083\u0001\u0000\u0000\u0000\u0015"+
		"\u008e\u0001\u0000\u0000\u0000\u0017\u0096\u0001\u0000\u0000\u0000\u0019"+
		"\u00a2\u0001\u0000\u0000\u0000\u001b\u00a4\u0001\u0000\u0000\u0000\u001d"+
		"\u00ab\u0001\u0000\u0000\u0000\u001f\u00b2\u0001\u0000\u0000\u0000!\u00b9"+
		"\u0001\u0000\u0000\u0000#\u00c0\u0001\u0000\u0000\u0000%\u00c9\u0001\u0000"+
		"\u0000\u0000\'\u00cd\u0001\u0000\u0000\u0000)\u00d1\u0001\u0000\u0000"+
		"\u0000+\u00d5\u0001\u0000\u0000\u0000-\u00dc\u0001\u0000\u0000\u0000/"+
		"\u00e2\u0001\u0000\u0000\u00001\u00e9\u0001\u0000\u0000\u000037\u0005"+
		"#\u0000\u000046\b\u0000\u0000\u000054\u0001\u0000\u0000\u000069\u0001"+
		"\u0000\u0000\u000075\u0001\u0000\u0000\u000078\u0001\u0000\u0000\u0000"+
		"8:\u0001\u0000\u0000\u000097\u0001\u0000\u0000\u0000:;\u0007\u0000\u0000"+
		"\u0000;<\u0001\u0000\u0000\u0000<=\u0006\u0000\u0000\u0000=\u0004\u0001"+
		"\u0000\u0000\u0000>?\u0005.\u0000\u0000?@\u0005c\u0000\u0000@A\u0005l"+
		"\u0000\u0000AB\u0005a\u0000\u0000BC\u0005s\u0000\u0000CD\u0005s\u0000"+
		"\u0000D\u0006\u0001\u0000\u0000\u0000EF\u0005.\u0000\u0000FG\u0005s\u0000"+
		"\u0000GH\u0005u\u0000\u0000HI\u0005p\u0000\u0000IJ\u0005e\u0000\u0000"+
		"JK\u0005r\u0000\u0000K\b\u0001\u0000\u0000\u0000LM\u0005.\u0000\u0000"+
		"MN\u0005s\u0000\u0000NO\u0005o\u0000\u0000OP\u0005u\u0000\u0000PQ\u0005"+
		"r\u0000\u0000QR\u0005c\u0000\u0000RS\u0005e\u0000\u0000S\n\u0001\u0000"+
		"\u0000\u0000TU\u0005.\u0000\u0000UV\u0005i\u0000\u0000VW\u0005m\u0000"+
		"\u0000WX\u0005p\u0000\u0000XY\u0005l\u0000\u0000YZ\u0005e\u0000\u0000"+
		"Z[\u0005m\u0000\u0000[\\\u0005e\u0000\u0000\\]\u0005n\u0000\u0000]^\u0005"+
		"t\u0000\u0000^_\u0005s\u0000\u0000_\f\u0001\u0000\u0000\u0000`a\u0005"+
		".\u0000\u0000ab\u0005a\u0000\u0000bc\u0005n\u0000\u0000cd\u0005n\u0000"+
		"\u0000de\u0005o\u0000\u0000ef\u0005t\u0000\u0000fg\u0005a\u0000\u0000"+
		"gh\u0005t\u0000\u0000hi\u0005i\u0000\u0000ij\u0005o\u0000\u0000jk\u0005"+
		"n\u0000\u0000k\u000e\u0001\u0000\u0000\u0000lm\u0005.\u0000\u0000mn\u0005"+
		"e\u0000\u0000no\u0005n\u0000\u0000op\u0005d\u0000\u0000pq\u0005 \u0000"+
		"\u0000qr\u0005a\u0000\u0000rs\u0005n\u0000\u0000st\u0005n\u0000\u0000"+
		"tu\u0005o\u0000\u0000uv\u0005t\u0000\u0000vw\u0005a\u0000\u0000wx\u0005"+
		"t\u0000\u0000xy\u0005i\u0000\u0000yz\u0005o\u0000\u0000z{\u0005n\u0000"+
		"\u0000{\u0010\u0001\u0000\u0000\u0000|}\u0005.\u0000\u0000}~\u0005f\u0000"+
		"\u0000~\u007f\u0005i\u0000\u0000\u007f\u0080\u0005e\u0000\u0000\u0080"+
		"\u0081\u0005l\u0000\u0000\u0081\u0082\u0005d\u0000\u0000\u0082\u0012\u0001"+
		"\u0000\u0000\u0000\u0083\u0084\u0005.\u0000\u0000\u0084\u0085\u0005e\u0000"+
		"\u0000\u0085\u0086\u0005n\u0000\u0000\u0086\u0087\u0005d\u0000\u0000\u0087"+
		"\u0088\u0005 \u0000\u0000\u0088\u0089\u0005f\u0000\u0000\u0089\u008a\u0005"+
		"i\u0000\u0000\u008a\u008b\u0005e\u0000\u0000\u008b\u008c\u0005l\u0000"+
		"\u0000\u008c\u008d\u0005d\u0000\u0000\u008d\u0014\u0001\u0000\u0000\u0000"+
		"\u008e\u008f\u0005.\u0000\u0000\u008f\u0090\u0005m\u0000\u0000\u0090\u0091"+
		"\u0005e\u0000\u0000\u0091\u0092\u0005t\u0000\u0000\u0092\u0093\u0005h"+
		"\u0000\u0000\u0093\u0094\u0005o\u0000\u0000\u0094\u0095\u0005d\u0000\u0000"+
		"\u0095\u0016\u0001\u0000\u0000\u0000\u0096\u0097\u0005.\u0000\u0000\u0097"+
		"\u0098\u0005e\u0000\u0000\u0098\u0099\u0005n\u0000\u0000\u0099\u009a\u0005"+
		"d\u0000\u0000\u009a\u009b\u0005 \u0000\u0000\u009b\u009c\u0005m\u0000"+
		"\u0000\u009c\u009d\u0005e\u0000\u0000\u009d\u009e\u0005t\u0000\u0000\u009e"+
		"\u009f\u0005h\u0000\u0000\u009f\u00a0\u0005o\u0000\u0000\u00a0\u00a1\u0005"+
		"d\u0000\u0000\u00a1\u0018\u0001\u0000\u0000\u0000\u00a2\u00a3\u0007\u0000"+
		"\u0000\u0000\u00a3\u001a\u0001\u0000\u0000\u0000\u00a4\u00a8\u0003\u0005"+
		"\u0001\u0000\u00a5\u00a7\b\u0000\u0000\u0000\u00a6\u00a5\u0001\u0000\u0000"+
		"\u0000\u00a7\u00aa\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000"+
		"\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u001c\u0001\u0000\u0000"+
		"\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00ab\u00af\u0003\u0007\u0002"+
		"\u0000\u00ac\u00ae\b\u0000\u0000\u0000\u00ad\u00ac\u0001\u0000\u0000\u0000"+
		"\u00ae\u00b1\u0001\u0000\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000"+
		"\u00af\u00b0\u0001\u0000\u0000\u0000\u00b0\u001e\u0001\u0000\u0000\u0000"+
		"\u00b1\u00af\u0001\u0000\u0000\u0000\u00b2\u00b6\u0003\t\u0003\u0000\u00b3"+
		"\u00b5\b\u0000\u0000\u0000\u00b4\u00b3\u0001\u0000\u0000\u0000\u00b5\u00b8"+
		"\u0001\u0000\u0000\u0000\u00b6\u00b4\u0001\u0000\u0000\u0000\u00b6\u00b7"+
		"\u0001\u0000\u0000\u0000\u00b7 \u0001\u0000\u0000\u0000\u00b8\u00b6\u0001"+
		"\u0000\u0000\u0000\u00b9\u00bd\u0003\u000b\u0004\u0000\u00ba\u00bc\b\u0000"+
		"\u0000\u0000\u00bb\u00ba\u0001\u0000\u0000\u0000\u00bc\u00bf\u0001\u0000"+
		"\u0000\u0000\u00bd\u00bb\u0001\u0000\u0000\u0000\u00bd\u00be\u0001\u0000"+
		"\u0000\u0000\u00be\"\u0001\u0000\u0000\u0000\u00bf\u00bd\u0001\u0000\u0000"+
		"\u0000\u00c0\u00c4\u0003\r\u0005\u0000\u00c1\u00c3\t\u0000\u0000\u0000"+
		"\u00c2\u00c1\u0001\u0000\u0000\u0000\u00c3\u00c6\u0001\u0000\u0000\u0000"+
		"\u00c4\u00c5\u0001\u0000\u0000\u0000\u00c4\u00c2\u0001\u0000\u0000\u0000"+
		"\u00c5\u00c7\u0001\u0000\u0000\u0000\u00c6\u00c4\u0001\u0000\u0000\u0000"+
		"\u00c7\u00c8\u0003\u000f\u0006\u0000\u00c8$\u0001\u0000\u0000\u0000\u00c9"+
		"\u00ca\u0003\u0011\u0007\u0000\u00ca\u00cb\u0001\u0000\u0000\u0000\u00cb"+
		"\u00cc\u0006\u0011\u0001\u0000\u00cc&\u0001\u0000\u0000\u0000\u00cd\u00ce"+
		"\u0003\u0015\t\u0000\u00ce\u00cf\u0001\u0000\u0000\u0000\u00cf\u00d0\u0006"+
		"\u0012\u0002\u0000\u00d0(\u0001\u0000\u0000\u0000\u00d1\u00d2\u0007\u0001"+
		"\u0000\u0000\u00d2\u00d3\u0001\u0000\u0000\u0000\u00d3\u00d4\u0006\u0013"+
		"\u0000\u0000\u00d4*\u0001\u0000\u0000\u0000\u00d5\u00d6\u0003\u0013\b"+
		"\u0000\u00d6\u00d7\u0001\u0000\u0000\u0000\u00d7\u00d8\u0006\u0014\u0003"+
		"\u0000\u00d8,\u0001\u0000\u0000\u0000\u00d9\u00db\b\u0000\u0000\u0000"+
		"\u00da\u00d9\u0001\u0000\u0000\u0000\u00db\u00de\u0001\u0000\u0000\u0000"+
		"\u00dc\u00da\u0001\u0000\u0000\u0000\u00dc\u00dd\u0001\u0000\u0000\u0000"+
		"\u00dd\u00df\u0001\u0000\u0000\u0000\u00de\u00dc\u0001\u0000\u0000\u0000"+
		"\u00df\u00e0\u0004\u0015\u0000\u0000\u00e0\u00e1\u0003\u0019\u000b\u0000"+
		"\u00e1.\u0001\u0000\u0000\u0000\u00e2\u00e3\u0003\u0017\n\u0000\u00e3"+
		"\u00e4\u0001\u0000\u0000\u0000\u00e4\u00e5\u0006\u0016\u0003\u0000\u00e5"+
		"0\u0001\u0000\u0000\u0000\u00e6\u00e8\b\u0000\u0000\u0000\u00e7\u00e6"+
		"\u0001\u0000\u0000\u0000\u00e8\u00eb\u0001\u0000\u0000\u0000\u00e9\u00e7"+
		"\u0001\u0000\u0000\u0000\u00e9\u00ea\u0001\u0000\u0000\u0000\u00ea\u00ec"+
		"\u0001\u0000\u0000\u0000\u00eb\u00e9\u0001\u0000\u0000\u0000\u00ec\u00ed"+
		"\u0004\u0017\u0001\u0000\u00ed\u00ee\u0003\u0019\u000b\u0000\u00ee2\u0001"+
		"\u0000\u0000\u0000\u000b\u0000\u0001\u00027\u00a8\u00af\u00b6\u00bd\u00c4"+
		"\u00dc\u00e9\u0004\u0006\u0000\u0000\u0005\u0001\u0000\u0005\u0002\u0000"+
		"\u0004\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}